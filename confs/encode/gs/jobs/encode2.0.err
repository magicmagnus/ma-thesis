/is/sg2/mkaut/miniconda3/lib/python3.10/site-packages/numba/np/ufunc/parallel.py:371: NumbaWarning: The TBB threading layer requires TBB version 2021 update 6 or later i.e., TBB_INTERFACE_VERSION >= 12060. Found TBB_INTERFACE_VERSION = 12050. The TBB threading layer is disabled.
  warnings.warn(problem)
Traceback (most recent call last):
  File "/is/sg2/mkaut/ma-thesis/encode_imgs.py", line 167, in <module>
    main(args)
  File "/is/sg2/mkaut/ma-thesis/encode_imgs.py", line 77, in main
    gs_watermark = GSWatermark(args, hf_cache_dir=HF_CACHE_DIR)
  File "/is/sg2/mkaut/ma-thesis/gaussianshading/export.py", line 69, in __init__
    watermark_m, key, nonce, watermark = pickle.load(f)
  File "/is/sg2/mkaut/miniconda3/lib/python3.10/site-packages/torch/storage.py", line 337, in _load_from_bytes
    return torch.load(io.BytesIO(b))
  File "/is/sg2/mkaut/miniconda3/lib/python3.10/site-packages/torch/serialization.py", line 1028, in load
    return _legacy_load(opened_file, map_location, pickle_module, **pickle_load_args)
  File "/is/sg2/mkaut/miniconda3/lib/python3.10/site-packages/torch/serialization.py", line 1256, in _legacy_load
    result = unpickler.load()
  File "/is/sg2/mkaut/miniconda3/lib/python3.10/site-packages/torch/serialization.py", line 1193, in persistent_load
    wrap_storage=restore_location(obj, location),
  File "/is/sg2/mkaut/miniconda3/lib/python3.10/site-packages/torch/serialization.py", line 381, in default_restore_location
    result = fn(storage, location)
  File "/is/sg2/mkaut/miniconda3/lib/python3.10/site-packages/torch/serialization.py", line 274, in _cuda_deserialize
    device = validate_cuda_device(location)
  File "/is/sg2/mkaut/miniconda3/lib/python3.10/site-packages/torch/serialization.py", line 258, in validate_cuda_device
    raise RuntimeError('Attempting to deserialize object on a CUDA '
RuntimeError: Attempting to deserialize object on a CUDA device but torch.cuda.is_available() is False. If you are running on a CPU-only machine, please use torch.load with map_location=torch.device('cpu') to map your storages to the CPU.
